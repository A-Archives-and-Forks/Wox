// source: plugin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var api_pb = require('./api_pb.js');
goog.object.extend(proto, api_pb);
goog.exportSymbol('proto.wox.plugin.Context', null, global);
goog.exportSymbol('proto.wox.plugin.Metadata', null, global);
goog.exportSymbol('proto.wox.plugin.PluginInitContext', null, global);
goog.exportSymbol('proto.wox.plugin.PluginInitParams', null, global);
goog.exportSymbol('proto.wox.plugin.PluginQueryContext', null, global);
goog.exportSymbol('proto.wox.plugin.PublicAPIClient', null, global);
goog.exportSymbol('proto.wox.plugin.Query', null, global);
goog.exportSymbol('proto.wox.plugin.Query.QueryType', null, global);
goog.exportSymbol('proto.wox.plugin.QueryResponse', null, global);
goog.exportSymbol('proto.wox.plugin.Result', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.PluginInitContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wox.plugin.PluginInitContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.PluginInitContext.displayName = 'proto.wox.plugin.PluginInitContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.PluginQueryContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wox.plugin.PluginQueryContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.PluginQueryContext.displayName = 'proto.wox.plugin.PluginQueryContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.Context = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wox.plugin.Context, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.Context.displayName = 'proto.wox.plugin.Context';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.PluginInitParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wox.plugin.PluginInitParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.PluginInitParams.displayName = 'proto.wox.plugin.PluginInitParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.PublicAPIClient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wox.plugin.PublicAPIClient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.PublicAPIClient.displayName = 'proto.wox.plugin.PublicAPIClient';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wox.plugin.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.Query.displayName = 'proto.wox.plugin.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.QueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wox.plugin.QueryResponse.repeatedFields_, null);
};
goog.inherits(proto.wox.plugin.QueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.QueryResponse.displayName = 'proto.wox.plugin.QueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.Result = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wox.plugin.Result.repeatedFields_, null);
};
goog.inherits(proto.wox.plugin.Result, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.Result.displayName = 'proto.wox.plugin.Result';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wox.plugin.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wox.plugin.Metadata.repeatedFields_, null);
};
goog.inherits(proto.wox.plugin.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wox.plugin.Metadata.displayName = 'proto.wox.plugin.Metadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.PluginInitContext.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.PluginInitContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.PluginInitContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PluginInitContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && proto.wox.plugin.Context.toObject(includeInstance, f),
    params: (f = msg.getParams()) && proto.wox.plugin.PluginInitParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.PluginInitContext}
 */
proto.wox.plugin.PluginInitContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.PluginInitContext;
  return proto.wox.plugin.PluginInitContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.PluginInitContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.PluginInitContext}
 */
proto.wox.plugin.PluginInitContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wox.plugin.Context;
      reader.readMessage(value,proto.wox.plugin.Context.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = new proto.wox.plugin.PluginInitParams;
      reader.readMessage(value,proto.wox.plugin.PluginInitParams.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.PluginInitContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.PluginInitContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.PluginInitContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PluginInitContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wox.plugin.Context.serializeBinaryToWriter
    );
  }
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wox.plugin.PluginInitParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional Context context = 1;
 * @return {?proto.wox.plugin.Context}
 */
proto.wox.plugin.PluginInitContext.prototype.getContext = function() {
  return /** @type{?proto.wox.plugin.Context} */ (
    jspb.Message.getWrapperField(this, proto.wox.plugin.Context, 1));
};


/**
 * @param {?proto.wox.plugin.Context|undefined} value
 * @return {!proto.wox.plugin.PluginInitContext} returns this
*/
proto.wox.plugin.PluginInitContext.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.PluginInitContext} returns this
 */
proto.wox.plugin.PluginInitContext.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.PluginInitContext.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PluginInitParams params = 2;
 * @return {?proto.wox.plugin.PluginInitParams}
 */
proto.wox.plugin.PluginInitContext.prototype.getParams = function() {
  return /** @type{?proto.wox.plugin.PluginInitParams} */ (
    jspb.Message.getWrapperField(this, proto.wox.plugin.PluginInitParams, 2));
};


/**
 * @param {?proto.wox.plugin.PluginInitParams|undefined} value
 * @return {!proto.wox.plugin.PluginInitContext} returns this
*/
proto.wox.plugin.PluginInitContext.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.PluginInitContext} returns this
 */
proto.wox.plugin.PluginInitContext.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.PluginInitContext.prototype.hasParams = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.PluginQueryContext.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.PluginQueryContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.PluginQueryContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PluginQueryContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && proto.wox.plugin.Context.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && proto.wox.plugin.Query.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.PluginQueryContext}
 */
proto.wox.plugin.PluginQueryContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.PluginQueryContext;
  return proto.wox.plugin.PluginQueryContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.PluginQueryContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.PluginQueryContext}
 */
proto.wox.plugin.PluginQueryContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wox.plugin.Context;
      reader.readMessage(value,proto.wox.plugin.Context.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = new proto.wox.plugin.Query;
      reader.readMessage(value,proto.wox.plugin.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.PluginQueryContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.PluginQueryContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.PluginQueryContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PluginQueryContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wox.plugin.Context.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wox.plugin.Query.serializeBinaryToWriter
    );
  }
};


/**
 * optional Context context = 1;
 * @return {?proto.wox.plugin.Context}
 */
proto.wox.plugin.PluginQueryContext.prototype.getContext = function() {
  return /** @type{?proto.wox.plugin.Context} */ (
    jspb.Message.getWrapperField(this, proto.wox.plugin.Context, 1));
};


/**
 * @param {?proto.wox.plugin.Context|undefined} value
 * @return {!proto.wox.plugin.PluginQueryContext} returns this
*/
proto.wox.plugin.PluginQueryContext.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.PluginQueryContext} returns this
 */
proto.wox.plugin.PluginQueryContext.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.PluginQueryContext.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Query query = 2;
 * @return {?proto.wox.plugin.Query}
 */
proto.wox.plugin.PluginQueryContext.prototype.getQuery = function() {
  return /** @type{?proto.wox.plugin.Query} */ (
    jspb.Message.getWrapperField(this, proto.wox.plugin.Query, 2));
};


/**
 * @param {?proto.wox.plugin.Query|undefined} value
 * @return {!proto.wox.plugin.PluginQueryContext} returns this
*/
proto.wox.plugin.PluginQueryContext.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.PluginQueryContext} returns this
 */
proto.wox.plugin.PluginQueryContext.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.PluginQueryContext.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.Context.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.Context.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.Context} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Context.toObject = function(includeInstance, msg) {
  var f, obj = {
    traceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.Context}
 */
proto.wox.plugin.Context.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.Context;
  return proto.wox.plugin.Context.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.Context} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.Context}
 */
proto.wox.plugin.Context.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.Context.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.Context.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.Context} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Context.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string trace_id = 1;
 * @return {string}
 */
proto.wox.plugin.Context.prototype.getTraceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Context} returns this
 */
proto.wox.plugin.Context.prototype.setTraceId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.PluginInitParams.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.PluginInitParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.PluginInitParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PluginInitParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    api: (f = msg.getApi()) && proto.wox.plugin.PublicAPIClient.toObject(includeInstance, f),
    pluginDirectory: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.PluginInitParams}
 */
proto.wox.plugin.PluginInitParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.PluginInitParams;
  return proto.wox.plugin.PluginInitParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.PluginInitParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.PluginInitParams}
 */
proto.wox.plugin.PluginInitParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wox.plugin.PublicAPIClient;
      reader.readMessage(value,proto.wox.plugin.PublicAPIClient.deserializeBinaryFromReader);
      msg.setApi(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPluginDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.PluginInitParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.PluginInitParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.PluginInitParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PluginInitParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wox.plugin.PublicAPIClient.serializeBinaryToWriter
    );
  }
  f = message.getPluginDirectory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional PublicAPIClient api = 1;
 * @return {?proto.wox.plugin.PublicAPIClient}
 */
proto.wox.plugin.PluginInitParams.prototype.getApi = function() {
  return /** @type{?proto.wox.plugin.PublicAPIClient} */ (
    jspb.Message.getWrapperField(this, proto.wox.plugin.PublicAPIClient, 1));
};


/**
 * @param {?proto.wox.plugin.PublicAPIClient|undefined} value
 * @return {!proto.wox.plugin.PluginInitParams} returns this
*/
proto.wox.plugin.PluginInitParams.prototype.setApi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.PluginInitParams} returns this
 */
proto.wox.plugin.PluginInitParams.prototype.clearApi = function() {
  return this.setApi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.PluginInitParams.prototype.hasApi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string plugin_directory = 2;
 * @return {string}
 */
proto.wox.plugin.PluginInitParams.prototype.getPluginDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.PluginInitParams} returns this
 */
proto.wox.plugin.PluginInitParams.prototype.setPluginDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.PublicAPIClient.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.PublicAPIClient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.PublicAPIClient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PublicAPIClient.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.PublicAPIClient}
 */
proto.wox.plugin.PublicAPIClient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.PublicAPIClient;
  return proto.wox.plugin.PublicAPIClient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.PublicAPIClient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.PublicAPIClient}
 */
proto.wox.plugin.PublicAPIClient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.PublicAPIClient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.PublicAPIClient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.PublicAPIClient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.PublicAPIClient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.wox.plugin.PublicAPIClient.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.PublicAPIClient} returns this
 */
proto.wox.plugin.PublicAPIClient.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rawQuery: jspb.Message.getFieldWithDefault(msg, 2, ""),
    triggerKeyword: jspb.Message.getFieldWithDefault(msg, 3, ""),
    command: jspb.Message.getFieldWithDefault(msg, 4, ""),
    search: jspb.Message.getFieldWithDefault(msg, 5, ""),
    selection: (f = msg.getSelection()) && common_pb.Selection.toObject(includeInstance, f),
    env: (f = msg.getEnv()) && common_pb.QueryEnv.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.Query}
 */
proto.wox.plugin.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.Query;
  return proto.wox.plugin.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.Query}
 */
proto.wox.plugin.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.wox.plugin.Query.QueryType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerKeyword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 6:
      var value = new common_pb.Selection;
      reader.readMessage(value,common_pb.Selection.deserializeBinaryFromReader);
      msg.setSelection(value);
      break;
    case 7:
      var value = new common_pb.QueryEnv;
      reader.readMessage(value,common_pb.QueryEnv.deserializeBinaryFromReader);
      msg.setEnv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRawQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTriggerKeyword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSelection();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.Selection.serializeBinaryToWriter
    );
  }
  f = message.getEnv();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.QueryEnv.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.wox.plugin.Query.QueryType = {
  INPUT: 0,
  SELECTION: 1
};

/**
 * optional QueryType type = 1;
 * @return {!proto.wox.plugin.Query.QueryType}
 */
proto.wox.plugin.Query.prototype.getType = function() {
  return /** @type {!proto.wox.plugin.Query.QueryType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.wox.plugin.Query.QueryType} value
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string raw_query = 2;
 * @return {string}
 */
proto.wox.plugin.Query.prototype.getRawQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.setRawQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string trigger_keyword = 3;
 * @return {string}
 */
proto.wox.plugin.Query.prototype.getTriggerKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.setTriggerKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string command = 4;
 * @return {string}
 */
proto.wox.plugin.Query.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.setCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string search = 5;
 * @return {string}
 */
proto.wox.plugin.Query.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Selection selection = 6;
 * @return {?proto.wox.plugin.Selection}
 */
proto.wox.plugin.Query.prototype.getSelection = function() {
  return /** @type{?proto.wox.plugin.Selection} */ (
    jspb.Message.getWrapperField(this, common_pb.Selection, 6));
};


/**
 * @param {?proto.wox.plugin.Selection|undefined} value
 * @return {!proto.wox.plugin.Query} returns this
*/
proto.wox.plugin.Query.prototype.setSelection = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.clearSelection = function() {
  return this.setSelection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.Query.prototype.hasSelection = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional QueryEnv env = 7;
 * @return {?proto.wox.plugin.QueryEnv}
 */
proto.wox.plugin.Query.prototype.getEnv = function() {
  return /** @type{?proto.wox.plugin.QueryEnv} */ (
    jspb.Message.getWrapperField(this, common_pb.QueryEnv, 7));
};


/**
 * @param {?proto.wox.plugin.QueryEnv|undefined} value
 * @return {!proto.wox.plugin.Query} returns this
*/
proto.wox.plugin.Query.prototype.setEnv = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.Query} returns this
 */
proto.wox.plugin.Query.prototype.clearEnv = function() {
  return this.setEnv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.Query.prototype.hasEnv = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wox.plugin.QueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.QueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.QueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.QueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.QueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.wox.plugin.Result.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.QueryResponse}
 */
proto.wox.plugin.QueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.QueryResponse;
  return proto.wox.plugin.QueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.QueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.QueryResponse}
 */
proto.wox.plugin.QueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wox.plugin.Result;
      reader.readMessage(value,proto.wox.plugin.Result.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.QueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.QueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.QueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.QueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.wox.plugin.Result.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Result results = 1;
 * @return {!Array<!proto.wox.plugin.Result>}
 */
proto.wox.plugin.QueryResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.wox.plugin.Result>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wox.plugin.Result, 1));
};


/**
 * @param {!Array<!proto.wox.plugin.Result>} value
 * @return {!proto.wox.plugin.QueryResponse} returns this
*/
proto.wox.plugin.QueryResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wox.plugin.Result=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wox.plugin.Result}
 */
proto.wox.plugin.QueryResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wox.plugin.Result, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wox.plugin.QueryResponse} returns this
 */
proto.wox.plugin.QueryResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wox.plugin.Result.repeatedFields_ = [9,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.Result.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.Result.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.Result} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Result.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: (f = msg.getIcon()) && common_pb.WoxImage.toObject(includeInstance, f),
    preview: (f = msg.getPreview()) && common_pb.WoxPreview.toObject(includeInstance, f),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    group: jspb.Message.getFieldWithDefault(msg, 7, ""),
    groupScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    tailsList: jspb.Message.toObjectList(msg.getTailsList(),
    common_pb.ResultTail.toObject, includeInstance),
    contextData: jspb.Message.getFieldWithDefault(msg, 10, ""),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    common_pb.ResultAction.toObject, includeInstance),
    refreshInterval: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.Result}
 */
proto.wox.plugin.Result.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.Result;
  return proto.wox.plugin.Result.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.Result} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.Result}
 */
proto.wox.plugin.Result.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 4:
      var value = new common_pb.WoxImage;
      reader.readMessage(value,common_pb.WoxImage.deserializeBinaryFromReader);
      msg.setIcon(value);
      break;
    case 5:
      var value = new common_pb.WoxPreview;
      reader.readMessage(value,common_pb.WoxPreview.deserializeBinaryFromReader);
      msg.setPreview(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGroupScore(value);
      break;
    case 9:
      var value = new common_pb.ResultTail;
      reader.readMessage(value,common_pb.ResultTail.deserializeBinaryFromReader);
      msg.addTails(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setContextData(value);
      break;
    case 11:
      var value = new common_pb.ResultAction;
      reader.readMessage(value,common_pb.ResultAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefreshInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.Result.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.Result.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.Result} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Result.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.WoxImage.serializeBinaryToWriter
    );
  }
  f = message.getPreview();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.WoxPreview.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGroupScore();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getTailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      common_pb.ResultTail.serializeBinaryToWriter
    );
  }
  f = message.getContextData();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      common_pb.ResultAction.serializeBinaryToWriter
    );
  }
  f = message.getRefreshInterval();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wox.plugin.Result.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.wox.plugin.Result.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string subtitle = 3;
 * @return {string}
 */
proto.wox.plugin.Result.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional WoxImage icon = 4;
 * @return {?proto.wox.plugin.WoxImage}
 */
proto.wox.plugin.Result.prototype.getIcon = function() {
  return /** @type{?proto.wox.plugin.WoxImage} */ (
    jspb.Message.getWrapperField(this, common_pb.WoxImage, 4));
};


/**
 * @param {?proto.wox.plugin.WoxImage|undefined} value
 * @return {!proto.wox.plugin.Result} returns this
*/
proto.wox.plugin.Result.prototype.setIcon = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.clearIcon = function() {
  return this.setIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.Result.prototype.hasIcon = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WoxPreview preview = 5;
 * @return {?proto.wox.plugin.WoxPreview}
 */
proto.wox.plugin.Result.prototype.getPreview = function() {
  return /** @type{?proto.wox.plugin.WoxPreview} */ (
    jspb.Message.getWrapperField(this, common_pb.WoxPreview, 5));
};


/**
 * @param {?proto.wox.plugin.WoxPreview|undefined} value
 * @return {!proto.wox.plugin.Result} returns this
*/
proto.wox.plugin.Result.prototype.setPreview = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.clearPreview = function() {
  return this.setPreview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wox.plugin.Result.prototype.hasPreview = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double score = 6;
 * @return {number}
 */
proto.wox.plugin.Result.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string group = 7;
 * @return {string}
 */
proto.wox.plugin.Result.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double group_score = 8;
 * @return {number}
 */
proto.wox.plugin.Result.prototype.getGroupScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setGroupScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * repeated ResultTail tails = 9;
 * @return {!Array<!proto.wox.plugin.ResultTail>}
 */
proto.wox.plugin.Result.prototype.getTailsList = function() {
  return /** @type{!Array<!proto.wox.plugin.ResultTail>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.ResultTail, 9));
};


/**
 * @param {!Array<!proto.wox.plugin.ResultTail>} value
 * @return {!proto.wox.plugin.Result} returns this
*/
proto.wox.plugin.Result.prototype.setTailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.wox.plugin.ResultTail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wox.plugin.ResultTail}
 */
proto.wox.plugin.Result.prototype.addTails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.wox.plugin.ResultTail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.clearTailsList = function() {
  return this.setTailsList([]);
};


/**
 * optional string context_data = 10;
 * @return {string}
 */
proto.wox.plugin.Result.prototype.getContextData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setContextData = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated ResultAction actions = 11;
 * @return {!Array<!proto.wox.plugin.ResultAction>}
 */
proto.wox.plugin.Result.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.wox.plugin.ResultAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.ResultAction, 11));
};


/**
 * @param {!Array<!proto.wox.plugin.ResultAction>} value
 * @return {!proto.wox.plugin.Result} returns this
*/
proto.wox.plugin.Result.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.wox.plugin.ResultAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wox.plugin.ResultAction}
 */
proto.wox.plugin.Result.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.wox.plugin.ResultAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional int32 refresh_interval = 12;
 * @return {number}
 */
proto.wox.plugin.Result.prototype.getRefreshInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.wox.plugin.Result} returns this
 */
proto.wox.plugin.Result.prototype.setRefreshInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wox.plugin.Metadata.repeatedFields_ = [8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wox.plugin.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.wox.plugin.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wox.plugin.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    author: jspb.Message.getFieldWithDefault(msg, 4, ""),
    version: jspb.Message.getFieldWithDefault(msg, 5, ""),
    website: jspb.Message.getFieldWithDefault(msg, 6, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 7, ""),
    supportedFeaturesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),
    common_pb.MetadataCommand.toObject, includeInstance),
    settingsList: jspb.Message.toObjectList(msg.getSettingsList(),
    common_pb.MetadataSetting.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wox.plugin.Metadata}
 */
proto.wox.plugin.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wox.plugin.Metadata;
  return proto.wox.plugin.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wox.plugin.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wox.plugin.Metadata}
 */
proto.wox.plugin.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addSupportedFeatures(value);
      break;
    case 9:
      var value = new common_pb.MetadataCommand;
      reader.readMessage(value,common_pb.MetadataCommand.deserializeBinaryFromReader);
      msg.addCommands(value);
      break;
    case 10:
      var value = new common_pb.MetadataSetting;
      reader.readMessage(value,common_pb.MetadataSetting.deserializeBinaryFromReader);
      msg.addSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wox.plugin.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wox.plugin.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wox.plugin.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wox.plugin.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSupportedFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      common_pb.MetadataCommand.serializeBinaryToWriter
    );
  }
  f = message.getSettingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      common_pb.MetadataSetting.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string author = 4;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string version = 5;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string website = 6;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon = 7;
 * @return {string}
 */
proto.wox.plugin.Metadata.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string supported_features = 8;
 * @return {!Array<string>}
 */
proto.wox.plugin.Metadata.prototype.getSupportedFeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.setSupportedFeaturesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.addSupportedFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.clearSupportedFeaturesList = function() {
  return this.setSupportedFeaturesList([]);
};


/**
 * repeated MetadataCommand commands = 9;
 * @return {!Array<!proto.wox.plugin.MetadataCommand>}
 */
proto.wox.plugin.Metadata.prototype.getCommandsList = function() {
  return /** @type{!Array<!proto.wox.plugin.MetadataCommand>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MetadataCommand, 9));
};


/**
 * @param {!Array<!proto.wox.plugin.MetadataCommand>} value
 * @return {!proto.wox.plugin.Metadata} returns this
*/
proto.wox.plugin.Metadata.prototype.setCommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.wox.plugin.MetadataCommand=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wox.plugin.MetadataCommand}
 */
proto.wox.plugin.Metadata.prototype.addCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.wox.plugin.MetadataCommand, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.clearCommandsList = function() {
  return this.setCommandsList([]);
};


/**
 * repeated MetadataSetting settings = 10;
 * @return {!Array<!proto.wox.plugin.MetadataSetting>}
 */
proto.wox.plugin.Metadata.prototype.getSettingsList = function() {
  return /** @type{!Array<!proto.wox.plugin.MetadataSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.MetadataSetting, 10));
};


/**
 * @param {!Array<!proto.wox.plugin.MetadataSetting>} value
 * @return {!proto.wox.plugin.Metadata} returns this
*/
proto.wox.plugin.Metadata.prototype.setSettingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.wox.plugin.MetadataSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wox.plugin.MetadataSetting}
 */
proto.wox.plugin.Metadata.prototype.addSettings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.wox.plugin.MetadataSetting, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wox.plugin.Metadata} returns this
 */
proto.wox.plugin.Metadata.prototype.clearSettingsList = function() {
  return this.setSettingsList([]);
};


goog.object.extend(exports, proto.wox.plugin);
