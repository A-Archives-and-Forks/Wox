// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: plugin/api.proto

package plugin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangeQueryRequest_QueryType int32

const (
	ChangeQueryRequest_INPUT     ChangeQueryRequest_QueryType = 0
	ChangeQueryRequest_SELECTION ChangeQueryRequest_QueryType = 1
)

// Enum value maps for ChangeQueryRequest_QueryType.
var (
	ChangeQueryRequest_QueryType_name = map[int32]string{
		0: "INPUT",
		1: "SELECTION",
	}
	ChangeQueryRequest_QueryType_value = map[string]int32{
		"INPUT":     0,
		"SELECTION": 1,
	}
)

func (x ChangeQueryRequest_QueryType) Enum() *ChangeQueryRequest_QueryType {
	p := new(ChangeQueryRequest_QueryType)
	*p = x
	return p
}

func (x ChangeQueryRequest_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeQueryRequest_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_api_proto_enumTypes[0].Descriptor()
}

func (ChangeQueryRequest_QueryType) Type() protoreflect.EnumType {
	return &file_plugin_api_proto_enumTypes[0]
}

func (x ChangeQueryRequest_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeQueryRequest_QueryType.Descriptor instead.
func (ChangeQueryRequest_QueryType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{0, 0}
}

type LogRequest_LogLevel int32

const (
	LogRequest_INFO    LogRequest_LogLevel = 0
	LogRequest_ERROR   LogRequest_LogLevel = 1
	LogRequest_DEBUG   LogRequest_LogLevel = 2
	LogRequest_WARNING LogRequest_LogLevel = 3
)

// Enum value maps for LogRequest_LogLevel.
var (
	LogRequest_LogLevel_name = map[int32]string{
		0: "INFO",
		1: "ERROR",
		2: "DEBUG",
		3: "WARNING",
	}
	LogRequest_LogLevel_value = map[string]int32{
		"INFO":    0,
		"ERROR":   1,
		"DEBUG":   2,
		"WARNING": 3,
	}
)

func (x LogRequest_LogLevel) Enum() *LogRequest_LogLevel {
	p := new(LogRequest_LogLevel)
	*p = x
	return p
}

func (x LogRequest_LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogRequest_LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_api_proto_enumTypes[1].Descriptor()
}

func (LogRequest_LogLevel) Type() protoreflect.EnumType {
	return &file_plugin_api_proto_enumTypes[1]
}

func (x LogRequest_LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogRequest_LogLevel.Descriptor instead.
func (LogRequest_LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{2, 0}
}

type Conversation_Role int32

const (
	Conversation_USER   Conversation_Role = 0
	Conversation_SYSTEM Conversation_Role = 1
)

// Enum value maps for Conversation_Role.
var (
	Conversation_Role_name = map[int32]string{
		0: "USER",
		1: "SYSTEM",
	}
	Conversation_Role_value = map[string]int32{
		"USER":   0,
		"SYSTEM": 1,
	}
)

func (x Conversation_Role) Enum() *Conversation_Role {
	p := new(Conversation_Role)
	*p = x
	return p
}

func (x Conversation_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Conversation_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_api_proto_enumTypes[2].Descriptor()
}

func (Conversation_Role) Type() protoreflect.EnumType {
	return &file_plugin_api_proto_enumTypes[2]
}

func (x Conversation_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Conversation_Role.Descriptor instead.
func (Conversation_Role) EnumDescriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{10, 0}
}

type AIChatResponse_Type int32

const (
	AIChatResponse_STREAMING AIChatResponse_Type = 0
	AIChatResponse_FINISHED  AIChatResponse_Type = 1
	AIChatResponse_ERROR     AIChatResponse_Type = 2
)

// Enum value maps for AIChatResponse_Type.
var (
	AIChatResponse_Type_name = map[int32]string{
		0: "STREAMING",
		1: "FINISHED",
		2: "ERROR",
	}
	AIChatResponse_Type_value = map[string]int32{
		"STREAMING": 0,
		"FINISHED":  1,
		"ERROR":     2,
	}
)

func (x AIChatResponse_Type) Enum() *AIChatResponse_Type {
	p := new(AIChatResponse_Type)
	*p = x
	return p
}

func (x AIChatResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIChatResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_api_proto_enumTypes[3].Descriptor()
}

func (AIChatResponse_Type) Type() protoreflect.EnumType {
	return &file_plugin_api_proto_enumTypes[3]
}

func (x AIChatResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIChatResponse_Type.Descriptor instead.
func (AIChatResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{11, 0}
}

type ChangeQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryType      ChangeQueryRequest_QueryType `protobuf:"varint,1,opt,name=query_type,json=queryType,proto3,enum=wox.plugin.ChangeQueryRequest_QueryType" json:"query_type,omitempty"`
	QueryText      string                       `protobuf:"bytes,2,opt,name=query_text,json=queryText,proto3" json:"query_text,omitempty"`
	QuerySelection *Selection                   `protobuf:"bytes,3,opt,name=query_selection,json=querySelection,proto3" json:"query_selection,omitempty"`
}

func (x *ChangeQueryRequest) Reset() {
	*x = ChangeQueryRequest{}
	mi := &file_plugin_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQueryRequest) ProtoMessage() {}

func (x *ChangeQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQueryRequest.ProtoReflect.Descriptor instead.
func (*ChangeQueryRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeQueryRequest) GetQueryType() ChangeQueryRequest_QueryType {
	if x != nil {
		return x.QueryType
	}
	return ChangeQueryRequest_INPUT
}

func (x *ChangeQueryRequest) GetQueryText() string {
	if x != nil {
		return x.QueryText
	}
	return ""
}

func (x *ChangeQueryRequest) GetQuerySelection() *Selection {
	if x != nil {
		return x.QuerySelection
	}
	return nil
}

type NotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NotifyRequest) Reset() {
	*x = NotifyRequest{}
	mi := &file_plugin_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRequest) ProtoMessage() {}

func (x *NotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRequest.ProtoReflect.Descriptor instead.
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{1}
}

func (x *NotifyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level   LogRequest_LogLevel `protobuf:"varint,1,opt,name=level,proto3,enum=wox.plugin.LogRequest_LogLevel" json:"level,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_plugin_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{2}
}

func (x *LogRequest) GetLevel() LogRequest_LogLevel {
	if x != nil {
		return x.Level
	}
	return LogRequest_INFO
}

func (x *LogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TranslationRequest) Reset() {
	*x = TranslationRequest{}
	mi := &file_plugin_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslationRequest) ProtoMessage() {}

func (x *TranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslationRequest.ProtoReflect.Descriptor instead.
func (*TranslationRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{3}
}

func (x *TranslationRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TranslationResponse) Reset() {
	*x = TranslationResponse{}
	mi := &file_plugin_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslationResponse) ProtoMessage() {}

func (x *TranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslationResponse.ProtoReflect.Descriptor instead.
func (*TranslationResponse) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{4}
}

func (x *TranslationResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *SettingRequest) Reset() {
	*x = SettingRequest{}
	mi := &file_plugin_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingRequest) ProtoMessage() {}

func (x *SettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingRequest.ProtoReflect.Descriptor instead.
func (*SettingRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{5}
}

func (x *SettingRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type SettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SettingResponse) Reset() {
	*x = SettingResponse{}
	mi := &file_plugin_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingResponse) ProtoMessage() {}

func (x *SettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingResponse.ProtoReflect.Descriptor instead.
func (*SettingResponse) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{6}
}

func (x *SettingResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SaveSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value              string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	IsPlatformSpecific bool   `protobuf:"varint,3,opt,name=is_platform_specific,json=isPlatformSpecific,proto3" json:"is_platform_specific,omitempty"`
}

func (x *SaveSettingRequest) Reset() {
	*x = SaveSettingRequest{}
	mi := &file_plugin_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSettingRequest) ProtoMessage() {}

func (x *SaveSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSettingRequest.ProtoReflect.Descriptor instead.
func (*SaveSettingRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{7}
}

func (x *SaveSettingRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SaveSettingRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SaveSettingRequest) GetIsPlatformSpecific() bool {
	if x != nil {
		return x.IsPlatformSpecific
	}
	return false
}

type RegisterQueryCommandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*MetadataCommand `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *RegisterQueryCommandsRequest) Reset() {
	*x = RegisterQueryCommandsRequest{}
	mi := &file_plugin_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterQueryCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterQueryCommandsRequest) ProtoMessage() {}

func (x *RegisterQueryCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterQueryCommandsRequest.ProtoReflect.Descriptor instead.
func (*RegisterQueryCommandsRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterQueryCommandsRequest) GetCommands() []*MetadataCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

type AIChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model         string          `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Conversations []*Conversation `protobuf:"bytes,2,rep,name=conversations,proto3" json:"conversations,omitempty"`
}

func (x *AIChatRequest) Reset() {
	*x = AIChatRequest{}
	mi := &file_plugin_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIChatRequest) ProtoMessage() {}

func (x *AIChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIChatRequest.ProtoReflect.Descriptor instead.
func (*AIChatRequest) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{9}
}

func (x *AIChatRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AIChatRequest) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    Conversation_Role `protobuf:"varint,1,opt,name=role,proto3,enum=wox.plugin.Conversation_Role" json:"role,omitempty"`
	Content string            `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Images  [][]byte          `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_plugin_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{10}
}

func (x *Conversation) GetRole() Conversation_Role {
	if x != nil {
		return x.Role
	}
	return Conversation_USER
}

func (x *Conversation) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Conversation) GetImages() [][]byte {
	if x != nil {
		return x.Images
	}
	return nil
}

type AIChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AIChatResponse_Type `protobuf:"varint,1,opt,name=type,proto3,enum=wox.plugin.AIChatResponse_Type" json:"type,omitempty"`
	Content string              `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AIChatResponse) Reset() {
	*x = AIChatResponse{}
	mi := &file_plugin_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIChatResponse) ProtoMessage() {}

func (x *AIChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIChatResponse.ProtoReflect.Descriptor instead.
func (*AIChatResponse) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{11}
}

func (x *AIChatResponse) GetType() AIChatResponse_Type {
	if x != nil {
		return x.Type
	}
	return AIChatResponse_STREAMING
}

func (x *AIChatResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SettingChangedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SettingChangedEvent) Reset() {
	*x = SettingChangedEvent{}
	mi := &file_plugin_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingChangedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingChangedEvent) ProtoMessage() {}

func (x *SettingChangedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingChangedEvent.ProtoReflect.Descriptor instead.
func (*SettingChangedEvent) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{12}
}

func (x *SettingChangedEvent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SettingChangedEvent) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DynamicSettingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Setting *MetadataSetting `protobuf:"bytes,2,opt,name=setting,proto3" json:"setting,omitempty"`
}

func (x *DynamicSettingEvent) Reset() {
	*x = DynamicSettingEvent{}
	mi := &file_plugin_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicSettingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicSettingEvent) ProtoMessage() {}

func (x *DynamicSettingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicSettingEvent.ProtoReflect.Descriptor instead.
func (*DynamicSettingEvent) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{13}
}

func (x *DynamicSettingEvent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DynamicSettingEvent) GetSetting() *MetadataSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type DeepLinkEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments *MapString `protobuf:"bytes,1,opt,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *DeepLinkEvent) Reset() {
	*x = DeepLinkEvent{}
	mi := &file_plugin_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeepLinkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepLinkEvent) ProtoMessage() {}

func (x *DeepLinkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepLinkEvent.ProtoReflect.Descriptor instead.
func (*DeepLinkEvent) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{14}
}

func (x *DeepLinkEvent) GetArguments() *MapString {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type UnloadEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnloadEvent) Reset() {
	*x = UnloadEvent{}
	mi := &file_plugin_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnloadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadEvent) ProtoMessage() {}

func (x *UnloadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadEvent.ProtoReflect.Descriptor instead.
func (*UnloadEvent) Descriptor() ([]byte, []int) {
	return file_plugin_api_proto_rawDescGZIP(), []int{15}
}

var File_plugin_api_proto protoreflect.FileDescriptor

var file_plugin_api_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x13,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f,
	0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x22, 0x29, 0x0a, 0x0d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0x26, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x22, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e, 0x0a,
	0x12, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x22, 0x57, 0x0a,
	0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x0d, 0x41, 0x49, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3e, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x77,
	0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0x01, 0x22, 0x8f, 0x01, 0x0a, 0x0e, 0x41, 0x49, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x41, 0x49, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x22, 0x3d, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x5e, 0x0a, 0x13, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77,
	0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x22, 0x44, 0x0a, 0x0d, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x55, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x32, 0xbf, 0x07, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x41, 0x50, 0x49, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x48, 0x69, 0x64,
	0x65, 0x41, 0x70, 0x70, 0x12, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07,
	0x53, 0x68, 0x6f, 0x77, 0x41, 0x70, 0x70, 0x12, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x2e, 0x77, 0x6f, 0x78, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x12, 0x16, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77,
	0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x77, 0x6f, 0x78,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x49, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x49, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x41, 0x49, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x4a, 0x0a, 0x10, 0x4f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x77, 0x6f, 0x78, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4d,
	0x0a, 0x13, 0x4f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a,
	0x0a, 0x4f, 0x6e, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x11, 0x2e, 0x77, 0x6f,
	0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19,
	0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x65, 0x70,
	0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a,
	0x08, 0x4f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x11, 0x2e, 0x77, 0x6f, 0x78, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x77,
	0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x6f, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x2e, 0x77, 0x6f, 0x78, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x42, 0x08, 0x41, 0x70, 0x69,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0a, 0x77, 0x6f, 0x78, 0x2f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x57, 0x50, 0x58, 0xaa, 0x02, 0x0a, 0x57, 0x6f, 0x78, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0xca, 0x02, 0x0a, 0x57, 0x6f, 0x78, 0x5c, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0xe2, 0x02, 0x16, 0x57, 0x6f, 0x78, 0x5c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x57,
	0x6f, 0x78, 0x3a, 0x3a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_plugin_api_proto_rawDescOnce sync.Once
	file_plugin_api_proto_rawDescData = file_plugin_api_proto_rawDesc
)

func file_plugin_api_proto_rawDescGZIP() []byte {
	file_plugin_api_proto_rawDescOnce.Do(func() {
		file_plugin_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_api_proto_rawDescData)
	})
	return file_plugin_api_proto_rawDescData
}

var file_plugin_api_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_plugin_api_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_plugin_api_proto_goTypes = []any{
	(ChangeQueryRequest_QueryType)(0),    // 0: wox.plugin.ChangeQueryRequest.QueryType
	(LogRequest_LogLevel)(0),             // 1: wox.plugin.LogRequest.LogLevel
	(Conversation_Role)(0),               // 2: wox.plugin.Conversation.Role
	(AIChatResponse_Type)(0),             // 3: wox.plugin.AIChatResponse.Type
	(*ChangeQueryRequest)(nil),           // 4: wox.plugin.ChangeQueryRequest
	(*NotifyRequest)(nil),                // 5: wox.plugin.NotifyRequest
	(*LogRequest)(nil),                   // 6: wox.plugin.LogRequest
	(*TranslationRequest)(nil),           // 7: wox.plugin.TranslationRequest
	(*TranslationResponse)(nil),          // 8: wox.plugin.TranslationResponse
	(*SettingRequest)(nil),               // 9: wox.plugin.SettingRequest
	(*SettingResponse)(nil),              // 10: wox.plugin.SettingResponse
	(*SaveSettingRequest)(nil),           // 11: wox.plugin.SaveSettingRequest
	(*RegisterQueryCommandsRequest)(nil), // 12: wox.plugin.RegisterQueryCommandsRequest
	(*AIChatRequest)(nil),                // 13: wox.plugin.AIChatRequest
	(*Conversation)(nil),                 // 14: wox.plugin.Conversation
	(*AIChatResponse)(nil),               // 15: wox.plugin.AIChatResponse
	(*SettingChangedEvent)(nil),          // 16: wox.plugin.SettingChangedEvent
	(*DynamicSettingEvent)(nil),          // 17: wox.plugin.DynamicSettingEvent
	(*DeepLinkEvent)(nil),                // 18: wox.plugin.DeepLinkEvent
	(*UnloadEvent)(nil),                  // 19: wox.plugin.UnloadEvent
	(*Selection)(nil),                    // 20: wox.plugin.Selection
	(*MetadataCommand)(nil),              // 21: wox.plugin.MetadataCommand
	(*MetadataSetting)(nil),              // 22: wox.plugin.MetadataSetting
	(*MapString)(nil),                    // 23: wox.plugin.MapString
	(*Empty)(nil),                        // 24: wox.plugin.Empty
}
var file_plugin_api_proto_depIdxs = []int32{
	0,  // 0: wox.plugin.ChangeQueryRequest.query_type:type_name -> wox.plugin.ChangeQueryRequest.QueryType
	20, // 1: wox.plugin.ChangeQueryRequest.query_selection:type_name -> wox.plugin.Selection
	1,  // 2: wox.plugin.LogRequest.level:type_name -> wox.plugin.LogRequest.LogLevel
	21, // 3: wox.plugin.RegisterQueryCommandsRequest.commands:type_name -> wox.plugin.MetadataCommand
	14, // 4: wox.plugin.AIChatRequest.conversations:type_name -> wox.plugin.Conversation
	2,  // 5: wox.plugin.Conversation.role:type_name -> wox.plugin.Conversation.Role
	3,  // 6: wox.plugin.AIChatResponse.type:type_name -> wox.plugin.AIChatResponse.Type
	22, // 7: wox.plugin.DynamicSettingEvent.setting:type_name -> wox.plugin.MetadataSetting
	23, // 8: wox.plugin.DeepLinkEvent.arguments:type_name -> wox.plugin.MapString
	4,  // 9: wox.plugin.PublicAPI.ChangeQuery:input_type -> wox.plugin.ChangeQueryRequest
	24, // 10: wox.plugin.PublicAPI.HideApp:input_type -> wox.plugin.Empty
	24, // 11: wox.plugin.PublicAPI.ShowApp:input_type -> wox.plugin.Empty
	5,  // 12: wox.plugin.PublicAPI.Notify:input_type -> wox.plugin.NotifyRequest
	6,  // 13: wox.plugin.PublicAPI.Log:input_type -> wox.plugin.LogRequest
	7,  // 14: wox.plugin.PublicAPI.GetTranslation:input_type -> wox.plugin.TranslationRequest
	9,  // 15: wox.plugin.PublicAPI.GetSetting:input_type -> wox.plugin.SettingRequest
	11, // 16: wox.plugin.PublicAPI.SaveSetting:input_type -> wox.plugin.SaveSettingRequest
	12, // 17: wox.plugin.PublicAPI.RegisterQueryCommands:input_type -> wox.plugin.RegisterQueryCommandsRequest
	13, // 18: wox.plugin.PublicAPI.AIChatStream:input_type -> wox.plugin.AIChatRequest
	24, // 19: wox.plugin.PublicAPI.OnSettingChanged:input_type -> wox.plugin.Empty
	24, // 20: wox.plugin.PublicAPI.OnGetDynamicSetting:input_type -> wox.plugin.Empty
	24, // 21: wox.plugin.PublicAPI.OnDeepLink:input_type -> wox.plugin.Empty
	24, // 22: wox.plugin.PublicAPI.OnUnload:input_type -> wox.plugin.Empty
	24, // 23: wox.plugin.PublicAPI.ChangeQuery:output_type -> wox.plugin.Empty
	24, // 24: wox.plugin.PublicAPI.HideApp:output_type -> wox.plugin.Empty
	24, // 25: wox.plugin.PublicAPI.ShowApp:output_type -> wox.plugin.Empty
	24, // 26: wox.plugin.PublicAPI.Notify:output_type -> wox.plugin.Empty
	24, // 27: wox.plugin.PublicAPI.Log:output_type -> wox.plugin.Empty
	8,  // 28: wox.plugin.PublicAPI.GetTranslation:output_type -> wox.plugin.TranslationResponse
	10, // 29: wox.plugin.PublicAPI.GetSetting:output_type -> wox.plugin.SettingResponse
	24, // 30: wox.plugin.PublicAPI.SaveSetting:output_type -> wox.plugin.Empty
	24, // 31: wox.plugin.PublicAPI.RegisterQueryCommands:output_type -> wox.plugin.Empty
	15, // 32: wox.plugin.PublicAPI.AIChatStream:output_type -> wox.plugin.AIChatResponse
	16, // 33: wox.plugin.PublicAPI.OnSettingChanged:output_type -> wox.plugin.SettingChangedEvent
	17, // 34: wox.plugin.PublicAPI.OnGetDynamicSetting:output_type -> wox.plugin.DynamicSettingEvent
	18, // 35: wox.plugin.PublicAPI.OnDeepLink:output_type -> wox.plugin.DeepLinkEvent
	19, // 36: wox.plugin.PublicAPI.OnUnload:output_type -> wox.plugin.UnloadEvent
	23, // [23:37] is the sub-list for method output_type
	9,  // [9:23] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_plugin_api_proto_init() }
func file_plugin_api_proto_init() {
	if File_plugin_api_proto != nil {
		return
	}
	file_plugin_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_api_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_api_proto_goTypes,
		DependencyIndexes: file_plugin_api_proto_depIdxs,
		EnumInfos:         file_plugin_api_proto_enumTypes,
		MessageInfos:      file_plugin_api_proto_msgTypes,
	}.Build()
	File_plugin_api_proto = out.File
	file_plugin_api_proto_rawDesc = nil
	file_plugin_api_proto_goTypes = nil
	file_plugin_api_proto_depIdxs = nil
}
